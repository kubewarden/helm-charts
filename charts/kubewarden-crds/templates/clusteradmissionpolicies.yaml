apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusteradmissionpolicies.policies.kubewarden.io
spec:
  group: policies.kubewarden.io
  names:
    kind: ClusterAdmissionPolicy
    listKind: ClusterAdmissionPolicyList
    plural: clusteradmissionpolicies
    singular: clusteradmissionpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Bound to Policy Server
      jsonPath: .spec.policyServer
      name: Policy Server
      type: string
    - description: Whether the policy is mutating
      jsonPath: .spec.mutating
      name: Mutating
      type: boolean
    - description: Whether the policy is used in audit checks
      jsonPath: .spec.backgroundAudit
      name: BackgroundAudit
      type: boolean
    - description: Policy deployment mode
      jsonPath: .spec.mode
      name: Mode
      type: string
    - description: Policy deployment mode observed on the assigned Policy Server
      jsonPath: .status.mode
      name: Observed mode
      type: string
    - description: Status of the policy
      jsonPath: .status.policyStatus
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .metadata.annotations['io\.kubewarden\.policy\.severity']
      name: Severity
      priority: 1
      type: string
    - jsonPath: .metadata.annotations['io\.kubewarden\.policy\.category']
      name: Category
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: ClusterAdmissionPolicy is the Schema for the clusteradmissionpolicies
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterAdmissionPolicySpec defines the desired state of ClusterAdmissionPolicy
            properties:
              backgroundAudit:
                default: true
                description: BackgroundAudit indicates whether a policy should be
                  used or skipped when performing audit checks. If false, the policy
                  cannot produce meaningful evaluation results during audit checks
                  and will be skipped. The default is "true".
                type: boolean
              contextAwareResources:
                description: List of Kubernetes resources the policy is allowed to
                  access at evaluation time. Access to these resources is done using
                  the `ServiceAccount` of the PolicyServer the policy is assigned
                  to.
                items:
                  description: ContextAwareResource identifies a Kubernetes resource
                  properties:
                    apiVersion:
                      description: apiVersion of the resource (v1 for core group,
                        groupName/groupVersions for other).
                      type: string
                    kind:
                      description: Singular PascalCase name of the resource
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                type: array
              failurePolicy:
                description: FailurePolicy defines how unrecognized errors and timeout
                  errors from the policy are handled. Allowed values are "Ignore"
                  or "Fail". * "Ignore" means that an error calling the webhook is
                  ignored and the API request is allowed to continue. * "Fail" means
                  that an error calling the webhook causes the admission to fail and
                  the API request to be rejected. The default behaviour is "Fail"
                type: string
              matchPolicy:
                description: 'matchPolicy defines how the "rules" list is used to
                  match incoming requests. Allowed values are "Exact" or "Equivalent".
                  <ul> <li> Exact: match a request only if it exactly matches a specified
                  rule. For example, if deployments can be modified via apps/v1, apps/v1beta1,
                  and extensions/v1beta1, but "rules" only included `apiGroups:["apps"],
                  apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1
                  or extensions/v1beta1 would not be sent to the webhook. </li> <li>
                  Equivalent: match a request if modifies a resource listed in rules,
                  even via another API group or version. For example, if deployments
                  can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
                  and "rules" only included `apiGroups:["apps"], apiVersions:["v1"],
                  resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1
                  would be converted to apps/v1 and sent to the webhook. </li> </ul>
                  Defaults to "Equivalent"'
                type: string
              mode:
                default: protect
                description: Mode defines the execution mode of this policy. Can be
                  set to either "protect" or "monitor". If it's empty, it is defaulted
                  to "protect". Transitioning this setting from "monitor" to "protect"
                  is allowed, but is disallowed to transition from "protect" to "monitor".
                  To perform this transition, the policy should be recreated in "monitor"
                  mode instead.
                enum:
                - protect
                - monitor
                type: string
              module:
                description: Module is the location of the WASM module to be loaded.
                  Can be a local file (file://), a remote file served by an HTTP server
                  (http://, https://), or an artifact served by an OCI-compatible
                  registry (registry://). If prefix is missing, it will default to
                  registry:// and use that internally.
                type: string
              mutating:
                description: Mutating indicates whether a policy has the ability to
                  mutate incoming requests or not.
                type: boolean
              namespaceSelector:
                description: 'NamespaceSelector decides whether to run the webhook
                  on an object based on whether the namespace for that object matches
                  the selector. If the object itself is a namespace, the matching
                  is performed on object.metadata.labels. If the object is another
                  cluster scoped resource, it never skips the webhook. <br/><br/>
                  For example, to run the webhook on any objects whose namespace is
                  not associated with "runlevel" of "0" or "1";  you will set the
                  selector as follows: <pre> "namespaceSelector": \{<br/> &nbsp;&nbsp;"matchExpressions":
                  [<br/> &nbsp;&nbsp;&nbsp;&nbsp;\{<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"key":
                  "runlevel",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"operator":
                  "NotIn",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"0",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1"<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br/> &nbsp;&nbsp;&nbsp;&nbsp;\}<br/>
                  &nbsp;&nbsp;]<br/> \} </pre> If instead you want to only run the
                  webhook on any objects whose namespace is associated with the "environment"
                  of "prod" or "staging"; you will set the selector as follows: <pre>
                  "namespaceSelector": \{<br/> &nbsp;&nbsp;"matchExpressions": [<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;\{<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"key":
                  "environment",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"operator":
                  "In",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"prod",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"staging"<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br/> &nbsp;&nbsp;&nbsp;&nbsp;\}<br/>
                  &nbsp;&nbsp;]<br/> \} </pre> See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                  for more examples of label selectors. <br/><br/> Default to the
                  empty LabelSelector, which matches everything.'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              objectSelector:
                description: ObjectSelector decides whether to run the webhook based
                  on if the object has matching labels. objectSelector is evaluated
                  against both the oldObject and newObject that would be sent to the
                  webhook, and is considered to match if either object matches the
                  selector. A null object (oldObject in the case of create, or newObject
                  in the case of delete) or an object that cannot have labels (like
                  a DeploymentRollback or a PodProxyOptions object) is not considered
                  to match. Use the object selector only if the webhook is opt-in,
                  because end users may skip the admission webhook by setting the
                  labels. Default to the empty LabelSelector, which matches everything.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              policyServer:
                default: default
                description: PolicyServer identifies an existing PolicyServer resource.
                type: string
              rules:
                description: Rules describes what operations on what resources/subresources
                  the webhook cares about. The webhook cares about an operation if
                  it matches _any_ Rule.
                items:
                  description: RuleWithOperations is a tuple of Operations and Resources.
                    It is recommended to make sure that all the tuple expansions are
                    valid.
                  properties:
                    apiGroups:
                      description: APIGroups is the API groups the resources belong
                        to. '*' is all groups. If '*' is present, the length of the
                        slice must be one. Required.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    apiVersions:
                      description: APIVersions is the API versions the resources belong
                        to. '*' is all versions. If '*' is present, the length of
                        the slice must be one. Required.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    operations:
                      description: Operations is the operations the admission hook
                        cares about - CREATE, UPDATE, DELETE, CONNECT or * for all
                        of those operations and any future admission operations that
                        are added. If '*' is present, the length of the slice must
                        be one. Required.
                      items:
                        description: OperationType specifies an operation for a request.
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    resources:
                      description: "Resources is a list of resources this rule applies
                        to. \n For example: 'pods' means pods. 'pods/log' means the
                        log subresource of pods. '*' means all resources, but not
                        subresources. 'pods/*' means all subresources of pods. '*/scale'
                        means all scale subresources. '*/*' means all resources and
                        their subresources. \n If wildcard is present, the validation
                        rule will ensure resources do not overlap with each other.
                        \n Depending on the enclosing object, subresources might not
                        be allowed. Required."
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    scope:
                      description: scope specifies the scope of this rule. Valid values
                        are "Cluster", "Namespaced", and "*" "Cluster" means that
                        only cluster-scoped resources will match this rule. Namespace
                        API objects are cluster-scoped. "Namespaced" means that only
                        namespaced resources will match this rule. "*" means that
                        there are no scope restrictions. Subresources match the scope
                        of their parent resource. Default is "*".
                      type: string
                  type: object
                type: array
              settings:
                description: 'Settings is a free-form object that contains the policy
                  configuration values. x-kubernetes-embedded-resource: false'
                nullable: true
                type: object
                x-kubernetes-preserve-unknown-fields: true
              sideEffects:
                description: 'SideEffects states whether this webhook has side effects.
                  Acceptable values are: None, NoneOnDryRun (webhooks created via
                  v1beta1 may also specify Some or Unknown). Webhooks with side effects
                  MUST implement a reconciliation system, since a request may be rejected
                  by a future step in the admission change and the side effects therefore
                  need to be undone. Requests with the dryRun attribute will be auto-rejected
                  if they match a webhook with sideEffects == Unknown or Some.'
                type: string
              timeoutSeconds:
                default: 10
                description: TimeoutSeconds specifies the timeout for this webhook.
                  After the timeout passes, the webhook call will be ignored or the
                  API call will fail based on the failure policy. The timeout value
                  must be between 1 and 30 seconds. Default to 10 seconds.
                format: int32
                type: integer
            required:
            - module
            - mutating
            - rules
            type: object
          status:
            description: PolicyStatus defines the observed state of ClusterAdmissionPolicy
              and AdmissionPolicy
            properties:
              conditions:
                description: 'Conditions represent the observed conditions of the
                  ClusterAdmissionPolicy resource.  Known .status.conditions.types
                  are: "PolicyServerSecretReconciled", "PolicyServerConfigMapReconciled",
                  "PolicyServerDeploymentReconciled", "PolicyServerServiceReconciled"
                  and "AdmissionPolicyActive"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              mode:
                description: PolicyMode represents the observed policy mode of this
                  policy in the associated PolicyServer configuration
                enum:
                - protect
                - monitor
                - unknown
                type: string
              policyStatus:
                description: PolicyStatus represents the observed status of the policy
                enum:
                - unscheduled
                - scheduled
                - pending
                - active
                type: string
            required:
            - policyStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Bound to Policy Server
      jsonPath: .spec.policyServer
      name: Policy Server
      type: string
    - description: Whether the policy is mutating
      jsonPath: .spec.mutating
      name: Mutating
      type: boolean
    - description: Policy deployment mode
      jsonPath: .spec.mode
      name: Mode
      type: string
    - description: Policy deployment mode observed on the assigned Policy Server
      jsonPath: .status.mode
      name: Observed mode
      type: string
    - description: Status of the policy
      jsonPath: .status.policyStatus
      name: Status
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: ClusterAdmissionPolicy is the Schema for the clusteradmissionpolicies
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterAdmissionPolicySpec defines the desired state of ClusterAdmissionPolicy
            properties:
              failurePolicy:
                description: FailurePolicy defines how unrecognized errors and timeout
                  errors from the policy are handled. Allowed values are "Ignore"
                  or "Fail". * "Ignore" means that an error calling the webhook is
                  ignored and the API request is allowed to continue. * "Fail" means
                  that an error calling the webhook causes the admission to fail and
                  the API request to be rejected. The default behaviour is "Fail"
                type: string
              matchPolicy:
                description: 'matchPolicy defines how the "rules" list is used to
                  match incoming requests. Allowed values are "Exact" or "Equivalent".
                  <ul> <li> Exact: match a request only if it exactly matches a specified
                  rule. For example, if deployments can be modified via apps/v1, apps/v1beta1,
                  and extensions/v1beta1, but "rules" only included `apiGroups:["apps"],
                  apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1
                  or extensions/v1beta1 would not be sent to the webhook. </li> <li>
                  Equivalent: match a request if modifies a resource listed in rules,
                  even via another API group or version. For example, if deployments
                  can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,
                  and "rules" only included `apiGroups:["apps"], apiVersions:["v1"],
                  resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1
                  would be converted to apps/v1 and sent to the webhook. </li> </ul>
                  Defaults to "Equivalent"'
                type: string
              mode:
                default: protect
                description: Mode defines the execution mode of this policy. Can be
                  set to either "protect" or "monitor". If it's empty, it is defaulted
                  to "protect". Transitioning this setting from "monitor" to "protect"
                  is allowed, but is disallowed to transition from "protect" to "monitor".
                  To perform this transition, the policy should be recreated in "monitor"
                  mode instead.
                enum:
                - protect
                - monitor
                type: string
              module:
                description: Module is the location of the WASM module to be loaded.
                  Can be a local file (file://), a remote file served by an HTTP server
                  (http://, https://), or an artifact served by an OCI-compatible
                  registry (registry://).
                type: string
              mutating:
                description: Mutating indicates whether a policy has the ability to
                  mutate incoming requests or not.
                type: boolean
              namespaceSelector:
                description: 'NamespaceSelector decides whether to run the webhook
                  on an object based on whether the namespace for that object matches
                  the selector. If the object itself is a namespace, the matching
                  is performed on object.metadata.labels. If the object is another
                  cluster scoped resource, it never skips the webhook. <br/><br/>
                  For example, to run the webhook on any objects whose namespace is
                  not associated with "runlevel" of "0" or "1";  you will set the
                  selector as follows: <pre> "namespaceSelector": \{<br/> &nbsp;&nbsp;"matchExpressions":
                  [<br/> &nbsp;&nbsp;&nbsp;&nbsp;\{<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"key":
                  "runlevel",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"operator":
                  "NotIn",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"0",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"1"<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br/> &nbsp;&nbsp;&nbsp;&nbsp;\}<br/>
                  &nbsp;&nbsp;]<br/> \} </pre> If instead you want to only run the
                  webhook on any objects whose namespace is associated with the "environment"
                  of "prod" or "staging"; you will set the selector as follows: <pre>
                  "namespaceSelector": \{<br/> &nbsp;&nbsp;"matchExpressions": [<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;\{<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"key":
                  "environment",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"operator":
                  "In",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"values": [<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"prod",<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"staging"<br/>
                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br/> &nbsp;&nbsp;&nbsp;&nbsp;\}<br/>
                  &nbsp;&nbsp;]<br/> \} </pre> See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                  for more examples of label selectors. <br/><br/> Default to the
                  empty LabelSelector, which matches everything.'
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              objectSelector:
                description: ObjectSelector decides whether to run the webhook based
                  on if the object has matching labels. objectSelector is evaluated
                  against both the oldObject and newObject that would be sent to the
                  webhook, and is considered to match if either object matches the
                  selector. A null object (oldObject in the case of create, or newObject
                  in the case of delete) or an object that cannot have labels (like
                  a DeploymentRollback or a PodProxyOptions object) is not considered
                  to match. Use the object selector only if the webhook is opt-in,
                  because end users may skip the admission webhook by setting the
                  labels. Default to the empty LabelSelector, which matches everything.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              policyServer:
                default: default
                description: PolicyServer identifies an existing PolicyServer resource.
                type: string
              rules:
                description: Rules describes what operations on what resources/subresources
                  the webhook cares about. The webhook cares about an operation if
                  it matches _any_ Rule.
                items:
                  description: RuleWithOperations is a tuple of Operations and Resources.
                    It is recommended to make sure that all the tuple expansions are
                    valid.
                  properties:
                    apiGroups:
                      description: APIGroups is the API groups the resources belong
                        to. '*' is all groups. If '*' is present, the length of the
                        slice must be one. Required.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    apiVersions:
                      description: APIVersions is the API versions the resources belong
                        to. '*' is all versions. If '*' is present, the length of
                        the slice must be one. Required.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    operations:
                      description: Operations is the operations the admission hook
                        cares about - CREATE, UPDATE, DELETE, CONNECT or * for all
                        of those operations and any future admission operations that
                        are added. If '*' is present, the length of the slice must
                        be one. Required.
                      items:
                        description: OperationType specifies an operation for a request.
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    resources:
                      description: "Resources is a list of resources this rule applies
                        to. \n For example: 'pods' means pods. 'pods/log' means the
                        log subresource of pods. '*' means all resources, but not
                        subresources. 'pods/*' means all subresources of pods. '*/scale'
                        means all scale subresources. '*/*' means all resources and
                        their subresources. \n If wildcard is present, the validation
                        rule will ensure resources do not overlap with each other.
                        \n Depending on the enclosing object, subresources might not
                        be allowed. Required."
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    scope:
                      description: scope specifies the scope of this rule. Valid values
                        are "Cluster", "Namespaced", and "*" "Cluster" means that
                        only cluster-scoped resources will match this rule. Namespace
                        API objects are cluster-scoped. "Namespaced" means that only
                        namespaced resources will match this rule. "*" means that
                        there are no scope restrictions. Subresources match the scope
                        of their parent resource. Default is "*".
                      type: string
                  type: object
                type: array
              settings:
                description: 'Settings is a free-form object that contains the policy
                  configuration values. x-kubernetes-embedded-resource: false'
                nullable: true
                type: object
                x-kubernetes-preserve-unknown-fields: true
              sideEffects:
                description: 'SideEffects states whether this webhook has side effects.
                  Acceptable values are: None, NoneOnDryRun (webhooks created via
                  v1beta1 may also specify Some or Unknown). Webhooks with side effects
                  MUST implement a reconciliation system, since a request may be rejected
                  by a future step in the admission change and the side effects therefore
                  need to be undone. Requests with the dryRun attribute will be auto-rejected
                  if they match a webhook with sideEffects == Unknown or Some.'
                type: string
              timeoutSeconds:
                default: 10
                description: TimeoutSeconds specifies the timeout for this webhook.
                  After the timeout passes, the webhook call will be ignored or the
                  API call will fail based on the failure policy. The timeout value
                  must be between 1 and 30 seconds. Default to 10 seconds.
                format: int32
                type: integer
            required:
            - module
            - mutating
            - rules
            type: object
          status:
            description: PolicyStatus defines the observed state of ClusterAdmissionPolicy
              and AdmissionPolicy
            properties:
              conditions:
                description: 'Conditions represent the observed conditions of the
                  ClusterAdmissionPolicy resource.  Known .status.conditions.types
                  are: "PolicyServerSecretReconciled", "PolicyServerConfigMapReconciled",
                  "PolicyServerDeploymentReconciled", "PolicyServerServiceReconciled"
                  and "AdmissionPolicyActive"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              mode:
                description: PolicyMode represents the observed policy mode of this
                  policy in the associated PolicyServer configuration
                enum:
                - protect
                - monitor
                - unknown
                type: string
              policyStatus:
                description: PolicyStatus represents the observed status of the policy
                enum:
                - unscheduled
                - scheduled
                - pending
                - active
                type: string
            required:
            - policyStatus
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
