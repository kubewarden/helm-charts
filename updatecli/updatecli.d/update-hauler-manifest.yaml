name: Update Hauler manifest with version from Helm chart

# {{ if .pipelineid }}
pipelineid: "{{ .pipelineid }}"
# {{ end }}

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.author }}"
      email: "{{ .github.email }}"
      directory: "/tmp/helm-charts"
      owner: "{{ requiredEnv .github.owner }}"
      repository: "helm-charts"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ requiredEnv .github.user }}"
      branch: "{{ .github.branch }}"
      commitmessage:
        type: "deps"
        title: "Update dependencies in Hauler manifest"
        hidecredit: true
        footers: "Signed-off-by: Kubewarden bot <cncf-kubewarden-maintainers@lists.cncf.io>"

sources:
  # {{ range $oci := .ociArtifacts}}
  "source/{{ $oci.image }}Version":
    kind: yaml
    scmid: default
    spec:
      file: "{{ $oci.file }}"
      key: "{{ $oci.key}}"
  # {{ end }}
  # {{ range $i, $chart := .helmCharts}}
  "source/{{ $chart.name}}ChartVersion":
    kind: yaml
    scmid: default
    spec:
      file: "{{ $chart.file }}"
      key: "{{ $chart.versionKey }}"
  # {{ end }}

# {{ if .helmCharts}}
conditions:
  # Adding this condition just to ensure that the policy-reporter chart is in
  # the expected position. Hopefully, we could find a better way to do that in
  # the target below. See why this is necessary in the target comment
  # {{ range $i, $chart := .helmCharts}}
  "condition/{{ $chart.name}}Position":
    kind: yaml
    disablesourceinput: true
    spec:
      file: "charts/hauler_manifest.yaml"
      key: "$.spec.charts[{{ $i }}].name"
      value: "{{ $chart.name }}"
  # {{ end }}
# {{ end }}

targets:
  # {{ range $oci := .ociArtifacts}}
  "target/{{ $oci.image }}":
    name: "Update {{ $oci.image }} image in Hauler manifest"
    kind: file
    sourceid: "source/{{ $oci.image }}Version"
    scmid: "default"
    dependson:
      - '{{ printf "source#source/%sVersion" $oci.image }}'
    spec:
      file: "charts/hauler_manifest.yaml"
      matchpattern: "(.*)- ?name: ?{{ $oci.image }}:(v?.+) ?(.*)"
      replacepattern: '$1- name: {{ $oci.image }}:{{ printf "source/%sVersion" $oci.image | source }}'
  # {{ if $oci.workflowUrl }}
  "target/{{ $oci.image }}IdentityRegex":
    name: "Update {{ $oci.image }} image identity regex in Hauler manifest"
    kind: file
    sourceid: "source/{{ $oci.image }}Version"
    dependson:
      - '{{ printf "source#source/%sVersion" $oci.image }}'
    scmid: "default"
    spec:
      file: "charts/hauler_manifest.yaml"
      matchpattern: "(.*)? certificate-identity-regexp: ?{{ $oci.workflowUrl }}/(v?.+) ?(.*)"
      replacepattern: '$1 certificate-identity-regexp: {{ $oci.workflowUrl }}/{{ printf "source/%sVersion" $oci.image | source }}'
  # {{ end }}
  # {{ end }}
  # {{ range $i, $chart := .helmCharts}}
  "target/{{ $chart.name}}Chart":
    name: "Update {{ $chart.name }} Helm chart version in Hauler manifest"
    kind: yaml
    sourceid: "source/{{  $chart.name }}ChartVersion"
    scmid: "default"
    dependson:
      - '{{ printf "condition#condition/%sPosition" $chart.name }}'
    spec:
      file: "charts/hauler_manifest.yaml"
      # Yamlpath to filter the helm chart by name did not work. That's why we
      # have the condition to ensure the script is not updating the wrong helm
      # chart
      key: "$.spec.charts[{{ $i }}].version"
  # {{ end }}

actions:
  openUpdatePR:
    title: '{{ default "deps: Update Hauler manifest" .pr.title }}'
    kind: "github/pullrequest"
    scmid: "default"
    spec:
      automerge: false
      mergemethod: squash
      description: |
        Automatic update of dependencies: policies and kuberlr-kubectl image
        This PR has been created by automation.

        NOTE: REMEMBER TO SQUASH MERGE

        Update policies:
        - [ ] I have checked that the kubewarden-defaults values
          `recommendedPolicies.*.settings` are up to date
        - [ ] I have updated charts/kubewarden-defaults/questions.yaml from
          those of the policies

      draft: false
      labels:
        - "kind/chore"
        - "area/dependencies"
