# This action releases the kubewarden-controller helm chart
# The action must run on each commit done against master, however
# a new release will be performed **only** when a change occurs inside
# of the `charts` directory.
#
# When the helm chart is changed, this action will:
#   * Create a new GitHub release named: kubwarden-controller-chart
#   * This release has a kubwarden-controller-chart.tar.gz asset associated with
#     it. This is the actual helm chart
#   * Update the `index.yaml` file inside of the `gh-pages` branch. This is the
#     index of the helm chart repository, which we serve through GitHub pages
#   * Update the docs shown https://charts.kubewarden.io, on the `gh-pages`
#     branch. This is the README files of the chart(s), served also through
#     GitHub pages
#
# = FAQ
#
# == Why don't we run this action only when a tag like `v*` is created?
#
# Running the action only when a "release tag" is created will not produce
# a helm chart. That happens because the code which determines if something
# changed inside of the `charts` directory will not find any changes.
#
# == The action is just a "wrapper" around the official `github.com/helm/chart-releaser` tool, can't we just create our own action?
#
# Yes, we even got that to work. However, what we really want to do is the
# ability to tag the releases of the kubewarden-controller and its helm chart
# in an independent way. Which what the official GitHub action already does.

name: Release helm chart

on:
  push:
    branches:
    - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.2.0
        with:
          charts_dir: charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Prepare GH pages readme
        run: |
          mkdir -p ./to-gh-pages
          cp -f charts/kubewarden-controller/README.md ./to-gh-pages

      - name: Deploy readme to GH pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: to-gh-pages # The folder the action should deploy.
