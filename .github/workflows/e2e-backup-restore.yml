name: Backup-Restore E2E Test

on:
  workflow_dispatch:
    inputs:
      destroy_runner:
        description: Destroy the auto-generated self-hosted runner
        default: true
        type: boolean
      k3s_version:
        description: K3S version to use
        type: string
        default: 'v1.31.7+k3s1'
      runner_template:
        description: Runner template to use
        default: kubewarden-e2e-ci-runner-x86-64-template-v1
        type: string
      zone:
        description: GCP zone to host the runner
        default: us-central1-f
        type: string
  schedule:
    # Every Friday at 4am UTC (11pm in us-central1)
    - cron: '0 4 * * 5'

jobs:
  create-runner:
    uses: ./.github/workflows/sub_create-runner.yaml
    secrets:
      credentials: ${{ secrets.GCP_CREDENTIALS }}
      pat_token: ${{ secrets.KUBEWARDEN_SELF_HOSTED_RUNNER_PAT_TOKEN }}
    with:
      runner_template: ${{ inputs.runner_template || 'kubewarden-e2e-ci-runner-x86-64-template-v1' }}
      zone: ${{ inputs.zone || 'us-central1-f' }}

  e2e:
    needs: create-runner
    if: ${{ always() }}
    runs-on: ${{ needs.create-runner.outputs.runner_label }}
    env:
      INSTALL_K3S_SKIP_ENABLE: true
      K3S_KUBECONFIG_MODE: 0644
      K3S_VERSION: ${{ inputs.k3s_version || 'v1.31.7+k3s1' }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Checkout e2e
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          repository: ${{ github.repository_owner }}/kubewarden-end-to-end-tests
          path: e2e-tests
          submodules: 'true'
      # Fetching backup-restore operator from fork because the PR is not merged yet
      # https://github.com/rancher/backup-restore-operator/pull/789
      - name: Checkout backup-restore 
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          repository: viccuad/backup-restore-operator
          path: backup-restore-operator
          ref: feat/add-kubewarden

      - name: Authenticate to GCP
        id: authenticate
        uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f # v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup gcloud
        id: setup_gcloud
        uses: google-github-actions/setup-gcloud@e427ad8a34f8676edf47cf7d7925499adf3eb74f # v2

      - name: Setup Go
        id: setup_go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          cache-dependency-path: ./e2e-tests/tests/ginkgo-e2e/go.sum
          go-version-file: ./e2e-tests/tests/ginkgo-e2e/go.mod

      - name: Define needed system variables
        run: |
          # Add missing PATH, removed in recent distributions for security reasons...
          echo "/usr/local/bin" >> ${GITHUB_PATH}
      
      - name: Install K3S
        id: install_k3s
        run: |
          cd ${GITHUB_WORKSPACE}/e2e-tests/tests/ginkgo-e2e
          make e2e-install-k3s

      - name: Install backup-restore components
        id: install_backup_restore
        env:
          BACKUP_RESTORE_VERSION: ${{ inputs.backup_restore_version }}
        run: |
          #cd ${GITHUB_WORKSPACE}/e2e-tests/tests/ginkgo-e2e
          #make e2e-install-backup-restore

          # BUILD BACKUP_RESTORE OPERATOR FROM FORK
          # WAITING ON MERGING PR (https://github.com/rancher/backup-restore-operator/pull/789)
          cd ${GITHUB_WORKSPACE}/backup-restore-operator
          helm install --wait  --create-namespace -n cattle-resources-system  rancher-backup-crd ./charts/rancher-backup-crd
          sed -i 's/%TAG%/v7.0.1/g' ./charts/rancher-backup/values.yaml
          helm install --wait -n cattle-resources-system rancher-backup ./charts/rancher-backup --set persistence.enabled=true --set persistence.storageClass=local-path


      - name: Extract component versions/informations
        id: component
        run: |
          # Extract rancher-backup-operator version
          BACKUP_OPERATOR_VERSION=$(kubectl get pod \
                                     --namespace cattle-resources-system \
                                     -l app.kubernetes.io/name=rancher-backup \
                                     -o jsonpath={.items[*].status.containerStatuses[*].image} 2> /dev/null || true)

      - name: Install Kubewarden
        id: install_kubewarden
        run: |
          cd ${GITHUB_WORKSPACE}/e2e-tests/tests/ginkgo-e2e
          make e2e-install-kubewarden

          
      - name: Test Backup/Restore kubewarden resources
        id: test_backup_restore
        run: |
          cd ${GITHUB_WORKSPACE}/e2e-tests/tests/ginkgo-e2e
          make e2e-full-backup-restore
      
  clean-and-delete-runner:
    needs: [create-runner, e2e]
    if: ${{ always() && needs.create-runner.result == 'success' && (github.event_name == 'schedule' || inputs.destroy_runner == true) }}
    uses: ./.github/workflows/sub_clean-and-delete-runner.yaml
    secrets:
      credentials: ${{ secrets.GCP_CREDENTIALS }}
      pat_token: ${{ secrets.KUBEWARDEN_SELF_HOSTED_RUNNER_PAT_TOKEN }}
    with:
      create_runner_result: ${{ needs.create-runner.result }}
      destroy_runner: ${{ inputs.destroy_runner || true }}
      runner_hostname: ${{ needs.create-runner.outputs.runner_hostname }}
      runner_label: ${{ needs.create-runner.outputs.runner_label }}
      zone: ${{ inputs.zone || 'us-central1-f' }}
